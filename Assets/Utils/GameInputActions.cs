//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Utils/GameInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""39a55aaa-4f95-4f46-819a-5815f2dc456b"",
            ""actions"": [
                {
                    ""name"": ""GroundMovement"",
                    ""type"": ""Value"",
                    ""id"": ""e35c5e8c-a0e6-4b07-bc42-de11fc9e0fee"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Value"",
                    ""id"": ""34fdcebf-fc91-41bb-8e23-2dd7797d718c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Horizontal"",
                    ""id"": ""8a546ccf-5b70-4818-8c7b-abf1a7532de0"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4c3b1f1c-54f2-4b65-a365-9490543b4fb8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""98a512f2-e783-4bdc-83ee-44b394217e8b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Horizontal"",
                    ""id"": ""77f07073-990e-48bd-b842-e42484c63b19"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundMovement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4df1e61f-ff28-4cfb-a4f6-905b4b57a378"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""eebc9740-cec9-453e-970c-1af80af50458"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""cc699b3a-eda7-4df2-a4e7-acb9dd740233"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3fb445c-0dee-4df9-9218-916e966222c5"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerWater"",
            ""id"": ""f1682f7c-9a08-483e-aa94-272712c074ba"",
            ""actions"": [
                {
                    ""name"": ""WaterMovementHorizontal"",
                    ""type"": ""Value"",
                    ""id"": ""f3dac87f-68d7-4f60-ae32-bb1d31480742"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""WaterMovementVertical"",
                    ""type"": ""Button"",
                    ""id"": ""0b7465c5-0228-4776-84b4-18420f678d7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Horizontal"",
                    ""id"": ""a6c554a8-4ee0-4a8e-a09a-2e8f0429bc1b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementHorizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""b1b3522f-25dc-48ea-bef2-dd107a21088c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""94e25375-a2bc-4268-8dcc-ee53afea1eef"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Horizontal"",
                    ""id"": ""ca447035-025c-42b8-8ae3-262103e66d46"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementHorizontal"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""4bd82964-b2f7-486c-a034-90e76b45b209"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""483997d3-5014-4223-ba5b-8104ce4fafed"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementHorizontal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vertical"",
                    ""id"": ""342eccfa-4d30-4a0a-8efb-0a140d862028"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementVertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ca46c82e-6e9b-4171-be7f-00bda50e6e02"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""9d06c456-2298-4f9f-a3e3-30a416847fde"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vertical"",
                    ""id"": ""1e77346b-1f29-420d-9448-afffcfab53a2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementVertical"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e8cf2763-bf46-4008-8fbb-d52df0ad491a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""574a8701-55fe-4f7b-8119-df88c733adc0"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterMovementVertical"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_GroundMovement = m_Player.FindAction("GroundMovement", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        // PlayerWater
        m_PlayerWater = asset.FindActionMap("PlayerWater", throwIfNotFound: true);
        m_PlayerWater_WaterMovementHorizontal = m_PlayerWater.FindAction("WaterMovementHorizontal", throwIfNotFound: true);
        m_PlayerWater_WaterMovementVertical = m_PlayerWater.FindAction("WaterMovementVertical", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_GroundMovement;
    private readonly InputAction m_Player_Jump;
    public struct PlayerActions
    {
        private @GameInputActions m_Wrapper;
        public PlayerActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @GroundMovement => m_Wrapper.m_Player_GroundMovement;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @GroundMovement.started += instance.OnGroundMovement;
            @GroundMovement.performed += instance.OnGroundMovement;
            @GroundMovement.canceled += instance.OnGroundMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @GroundMovement.started -= instance.OnGroundMovement;
            @GroundMovement.performed -= instance.OnGroundMovement;
            @GroundMovement.canceled -= instance.OnGroundMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // PlayerWater
    private readonly InputActionMap m_PlayerWater;
    private List<IPlayerWaterActions> m_PlayerWaterActionsCallbackInterfaces = new List<IPlayerWaterActions>();
    private readonly InputAction m_PlayerWater_WaterMovementHorizontal;
    private readonly InputAction m_PlayerWater_WaterMovementVertical;
    public struct PlayerWaterActions
    {
        private @GameInputActions m_Wrapper;
        public PlayerWaterActions(@GameInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @WaterMovementHorizontal => m_Wrapper.m_PlayerWater_WaterMovementHorizontal;
        public InputAction @WaterMovementVertical => m_Wrapper.m_PlayerWater_WaterMovementVertical;
        public InputActionMap Get() { return m_Wrapper.m_PlayerWater; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerWaterActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerWaterActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerWaterActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerWaterActionsCallbackInterfaces.Add(instance);
            @WaterMovementHorizontal.started += instance.OnWaterMovementHorizontal;
            @WaterMovementHorizontal.performed += instance.OnWaterMovementHorizontal;
            @WaterMovementHorizontal.canceled += instance.OnWaterMovementHorizontal;
            @WaterMovementVertical.started += instance.OnWaterMovementVertical;
            @WaterMovementVertical.performed += instance.OnWaterMovementVertical;
            @WaterMovementVertical.canceled += instance.OnWaterMovementVertical;
        }

        private void UnregisterCallbacks(IPlayerWaterActions instance)
        {
            @WaterMovementHorizontal.started -= instance.OnWaterMovementHorizontal;
            @WaterMovementHorizontal.performed -= instance.OnWaterMovementHorizontal;
            @WaterMovementHorizontal.canceled -= instance.OnWaterMovementHorizontal;
            @WaterMovementVertical.started -= instance.OnWaterMovementVertical;
            @WaterMovementVertical.performed -= instance.OnWaterMovementVertical;
            @WaterMovementVertical.canceled -= instance.OnWaterMovementVertical;
        }

        public void RemoveCallbacks(IPlayerWaterActions instance)
        {
            if (m_Wrapper.m_PlayerWaterActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerWaterActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerWaterActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerWaterActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerWaterActions @PlayerWater => new PlayerWaterActions(this);
    public interface IPlayerActions
    {
        void OnGroundMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
    public interface IPlayerWaterActions
    {
        void OnWaterMovementHorizontal(InputAction.CallbackContext context);
        void OnWaterMovementVertical(InputAction.CallbackContext context);
    }
}
